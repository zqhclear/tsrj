<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans
                http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
                http://www.springframework.org/schema/context 
				http://www.springframework.org/schema/context/spring-context-4.2.xsd 
                http://www.springframework.org/schema/tx
                http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
                http://www.springframework.org/schema/aop
				http://www.springframework.org/schema/aop/spring-aop.xsd
                http://www.springframework.org/schema/context
                http://www.springframework.org/schema/context/spring-context.xsd">

	<context:component-scan base-package="com.renrenaijia.*" />

 <bean id="propertyConfigure" 
  class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"> 
  <property name="locations"> 
   <list> 
    <value>test-jdbc.properties</value> 
   </list> 
  </property> 
 </bean>

	<!-- JNDI方式配置数据源 -->
			<bean id="mysqldataSource" class="com.alibaba.druid.pool.DruidDataSource"	destroy-method="close">  
			<property name="driverClassName" value="${driver}" />  
			<property name="url" value="${url}" />
			<property name="username" value="${username}" />
			<property name="password" value="${password}" />
			<!-- 初始化连接大小 -->  
			<property name="initialSize" value="${initialSize}"></property>
			<!-- 连接池最大数量 -->  
			<property name="maxActive" value="${maxActive}"></property>  
			<!-- 连接池最大空闲 -->  
			<property name="maxIdle" value="${maxIdle}"></property>  
			<!-- 连接池最小空闲 -->  
			<property name="minIdle" value="${minIdle}"></property>  
			<!-- 获取连接最大等待时间 -->  
			<property name="maxWait" value="${maxWait}"></property>
		</bean> 
		
		
	<!-- jdbcTemplate -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		 <property name="dataSource"  ref="mysqldataSource"/>
	</bean>

	<!-- myBatis文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="mysqldataSource" />
		<property name="mapperLocations" value="classpath*:mapper/**/*.xml" />
		<property name="typeAliasesPackage" value="com.renrenaijia.model.*"/>
		<property name="plugins">
			<array>
				<bean class="com.github.pagehelper.PageInterceptor">
					<property name="properties">
						<value>
							helperDialect=mysql
						</value>
					</property>
				</bean>
			</array>
		</property>
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.renrenaijia.dao.*" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>

	<!-- 开启注解处理器 -->
	<context:annotation-config />

	<!-- 配置事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="mysqldataSource" />
	</bean>

	<!-- 注解方式配置事物 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<!-- 启动对@AspectJ注解的支持 -->  
    <aop:aspectj-autoproxy/>   

	<import resource="test-applicationContext-redis.xml"></import>
</beans>